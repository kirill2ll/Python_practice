# Write a program that decrypts a message by a given key and gathers information about hidden treasure type and its coordinates. On the first line, you will receive a key (sequence of numbers separated by a space). On the next few lines, you will receive lines with strings until you get the command "find".
# You should loop through every string and decrease the ASCII code of each character with a corresponding number of the key sequence. You choose a key number from the sequence by just looping through it. If the length of the key sequence is less than the string sequence, you should continue looping from the beginning.
# For more clarification, see the example below.
# After decrypting the message, you will get a type of treasure and its coordinates. The type will be between the symbol "&", and the coordinates - between the symbols "<' and '>'.
# For each line print the type and the coordinates in the format "Found {type} at {coordinates}".

import re

keys = list(map(int, input().split()))


while True:
    message = input()
    decoded_message = ""
    key_index = 0

    if message == "find":
        break

    for ch in message:
        new_ch_num = ord(ch) - keys[key_index]
        key_index += 1
        decoded_message += chr(new_ch_num)

        if key_index >= len(keys):
            key_index = 0

    treasure_pattern = r'&([0-9a-zA-Z]+)&'
    coordinates_pattern = r'<([0-9a-zA-Z]+)>'

    treasure = re.search(treasure_pattern, decoded_message)
    coordinates = re.search(coordinates_pattern, decoded_message)

    print(treasure.group(1))